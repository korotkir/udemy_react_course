{"ast":null,"code":"var _jsxFileName = \"/Users/kirillkoroteev/dev/minin_course/minin_course_components/src/containers/Auth/Auth.js\";\nimport React, { Component } from 'react';\nimport styles from './Auth.module.css';\nimport Button from '../../components/UI/Button/Button';\nimport Input from '../../components/UI/Input/Input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst validateEmail = email => {\n  return email.match(/^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\n};\n\nexport default class Auth extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      isFormValid: false,\n      formControls: {\n        email: {\n          value: '',\n          type: 'email',\n          label: 'E-mail',\n          errorMessage: 'Введите корректный e-mail!',\n          valid: false,\n          touched: false,\n          validation: {\n            required: true,\n            email: true\n          }\n        },\n        password: {\n          value: '',\n          type: 'password',\n          label: 'Пароль',\n          errorMessage: 'Введите корректный пароль!',\n          valid: false,\n          touched: false,\n          validation: {\n            required: true,\n            minLength: 6\n          }\n        }\n      }\n    };\n\n    this.loginHandler = () => {};\n\n    this.registerHandler = () => {};\n\n    this.submitHandler = event => {\n      event.preventDefault();\n    };\n\n    this.onChangeHandler = (event, controlName) => {\n      const formControls = { ...this.state.formControls\n      };\n      const control = { ...formControls[controlName]\n      };\n      control.value = event.target.value;\n      control.touched = true;\n      control.valid = this.validateControl(control.value, control.validation);\n      formControls[controlName] = control;\n      let isFormValid = true;\n      Object.keys(formControls).forEach(name => {\n        isFormValid = formControls[name].valid && isFormValid;\n      });\n      this.setState({\n        formControls\n      });\n    };\n  }\n\n  validateControl(value, validation) {\n    if (!validation) {\n      return true;\n    }\n\n    let isValid = true;\n\n    if (validation.required) {\n      isValid = value.trim() !== '' && isValid;\n    }\n\n    if (validation.email) {\n      isValid = validateEmail(value) && isValid;\n    }\n\n    if (validation.minLength) {\n      isValid = value.length >= validation.minLength && isValid;\n    }\n\n    return isValid;\n  }\n\n  renderInputs() {\n    return Object.keys(this.state.formControls).map((controlName, index) => {\n      const control = this.state.formControls[controlName];\n      return /*#__PURE__*/_jsxDEV(Input, {\n        type: control.type,\n        value: control.value,\n        valid: control.valid,\n        touched: control.touched,\n        label: control.label,\n        shouldValidate: !!control.validation,\n        errorMessage: control.errorMessage,\n        onChange: event => this.onChangeHandler(event, controlName)\n      }, controlName + index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.Auth,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"\\u0410\\u0432\\u0442\\u043E\\u0440\\u0438\\u0437\\u0430\\u0446\\u0438\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: styles.AuthForm,\n          onSubmit: this.submitHandler,\n          children: [this.renderInputs(), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"success\",\n            onClick: this.loginHandler,\n            children: \"\\u0412\\u043E\\u0439\\u0442\\u0438\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            onCloick: this.registerHandler,\n            children: \"\\u0417\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/kirillkoroteev/dev/minin_course/minin_course_components/src/containers/Auth/Auth.js"],"names":["React","Component","styles","Button","Input","validateEmail","email","match","Auth","state","isFormValid","formControls","value","type","label","errorMessage","valid","touched","validation","required","password","minLength","loginHandler","registerHandler","submitHandler","event","preventDefault","onChangeHandler","controlName","control","target","validateControl","Object","keys","forEach","name","setState","isValid","trim","length","renderInputs","map","index","render","AuthForm"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport styles from './Auth.module.css'\nimport Button from '../../components/UI/Button/Button'\nimport Input from '../../components/UI/Input/Input'\n\nconst validateEmail = (email) => {\n  return email.match(\n    /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n  );\n};\n\nexport default class Auth extends Component {\n\n  state = {\n    isFormValid: false,\n    formControls: {\n      email: {\n        value: '',\n        type: 'email',\n        label: 'E-mail',\n        errorMessage: 'Введите корректный e-mail!',\n        valid: false,\n        touched: false,\n        validation: {\n          required: true,\n          email: true,\n        }\n      },\n      password: {\n        value: '',\n        type: 'password',\n        label: 'Пароль',\n        errorMessage: 'Введите корректный пароль!',\n        valid: false,\n        touched: false,\n        validation: {\n          required: true,\n          minLength: 6\n        }\n      }\n    }\n  }\n\n  loginHandler = () => {\n\n  }\n\n  registerHandler = () => {\n\n  }\n\n  submitHandler = event => {\n    event.preventDefault()\n  }\n\n  validateControl(value, validation) {\n    if (!validation) {\n      return true\n    }\n\n    let isValid = true\n\n    if (validation.required) {\n      isValid = value.trim() !== '' && isValid\n    }\n\n    if (validation.email) {\n      isValid = validateEmail(value) && isValid\n    }\n\n    if (validation.minLength) {\n      isValid = value.length >= validation.minLength && isValid\n    }\n\n    return isValid\n  }\n\n  onChangeHandler = (event, controlName) => {\n    const formControls = { ...this.state.formControls }\n    const control = { ...formControls[controlName] }\n\n    control.value = event.target.value\n    control.touched = true\n    control.valid = this.validateControl(control.value, control.validation)\n\n    formControls[controlName] = control\n\n    let isFormValid = true\n\n    Object.keys(formControls).forEach(name => {\n      isFormValid = formControls[name].valid && isFormValid\n    })\n\n    this.setState({\n      formControls\n    })\n  }\n\n  renderInputs() {\n    return Object.keys(this.state.formControls).map((controlName, index) => {\n      const control = this.state.formControls[controlName]\n      return (\n        <Input\n          key={controlName + index}\n          type={control.type}\n          value={control.value}\n          valid={control.valid}\n          touched={control.touched}\n          label={control.label}\n          shouldValidate={!!control.validation}\n          errorMessage={control.errorMessage}\n          onChange={event => this.onChangeHandler(event, controlName)}\n        />\n      )\n    })\n  }\n\n  render() {\n    return (\n      <div className={styles.Auth}>\n        <div>\n          <h1>Авторизация</h1>\n\n          <form className={styles.AuthForm} onSubmit={this.submitHandler}>\n\n            { this.renderInputs() }\n\n            <Button type=\"success\" onClick={this.loginHandler}>Войти</Button>\n            <Button type=\"primary\" onCloick={this.registerHandler}>Зарегистрироваться</Button>\n          </form>\n        </div>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}