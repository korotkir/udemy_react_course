{"ast":null,"code":"var _jsxFileName = \"/Users/kirillkoroteev/dev/minin_course/minin_course_components/src/containers/QuizCreator/QuizCreator.js\";\nimport React, { Component } from 'react';\nimport styles from './QuizCreator.module.css';\nimport Button from '../../components/UI/Button/Button';\nimport Input from '../../components/UI/Input/Input';\nimport Select from '../../components/UI/Select/Select';\nimport { createControl } from '../../form/formFramework';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction createOptionControl(number) {\n  return createControl({\n    label: `Вариант ${number}`,\n    errorMessage: 'Значение не может быть пустым',\n    id: number\n  }, {\n    required: true\n  });\n}\n\nfunction createFormControls() {\n  return {\n    question: createControl({\n      label: 'Введите вопрос',\n      errorMessage: 'Вопрос не может быть пустым'\n    }, {\n      required: true\n    }),\n    option1: createOptionControl(1),\n    option2: createOptionControl(2),\n    option3: createOptionControl(3),\n    option4: createOptionControl(4)\n  };\n}\n\nexport default class QuizCreator extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      quiz: [],\n      rightAnswerID: 1,\n      formControls: createFormControls()\n    };\n\n    this.submitHandler = event => {\n      event.preventDefault();\n    };\n\n    this.addQuestionHandler = () => {};\n\n    this.createQuizHandler = () => {};\n\n    this.changeHandler = (value, controlName) => {\n      const formControls = { ...this.state.formControls\n      };\n      const control = { ...formControls[controlName]\n      };\n    };\n\n    this.selectChangeHandler = event => {\n      this.setState({\n        rightAnswerId: +event.target.value\n      });\n    };\n  }\n\n  renderControls() {\n    return Object.keys(this.state.formControls).map((controlName, index) => {\n      const control = this.state.formControls[controlName];\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          label: control.label,\n          value: control.value,\n          valid: control.valid,\n          shouldValidate: !!control.validation,\n          touched: control.touched,\n          errorMessage: control.errorMessage,\n          onChange: event => this.changeHandler(event.target.value, controlName)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), index === 0 ? /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 36\n        }, this) : null]\n      }, void 0, true);\n    });\n  }\n\n  render() {\n    const select = /*#__PURE__*/_jsxDEV(Select, {\n      label: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u043F\\u0440\\u0430\\u0432\\u0438\\u043B\\u044C\\u043D\\u044B\\u0439 \\u043E\\u0442\\u0432\\u0435\\u0442\",\n      value: this.state.rightAnswerId,\n      onChange: this.selectChangeHandler,\n      options: [{\n        text: 1,\n        value: 1\n      }, {\n        text: 2,\n        value: 2\n      }, {\n        text: 3,\n        value: 3\n      }, {\n        text: 4,\n        value: 4\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 24\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.QuizCreator,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u043D\\u0438\\u0435 \\u0442\\u0435\\u0441\\u0442\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.submitHandler,\n          children: [this.renderControls(), select, /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            onClick: this.addQuestionHandler,\n            children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"success\",\n            onClick: this.createQuizHandler,\n            children: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u0442\\u0435\\u0441\\u0442\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/kirillkoroteev/dev/minin_course/minin_course_components/src/containers/QuizCreator/QuizCreator.js"],"names":["React","Component","styles","Button","Input","Select","createControl","createOptionControl","number","label","errorMessage","id","required","createFormControls","question","option1","option2","option3","option4","QuizCreator","state","quiz","rightAnswerID","formControls","submitHandler","event","preventDefault","addQuestionHandler","createQuizHandler","changeHandler","value","controlName","control","selectChangeHandler","setState","rightAnswerId","target","renderControls","Object","keys","map","index","valid","validation","touched","render","select","text"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport styles from './QuizCreator.module.css'\nimport Button from '../../components/UI/Button/Button'\nimport Input from '../../components/UI/Input/Input'\nimport Select from '../../components/UI/Select/Select'\nimport {createControl} from '../../form/formFramework'\n\nfunction createOptionControl(number) {\n    return createControl({\n        label: `Вариант ${number}`,\n        errorMessage: 'Значение не может быть пустым',\n        id: number,\n    }, {required: true})\n}\n\nfunction createFormControls() {\n    return {\n        question: createControl({\n            label: 'Введите вопрос',\n            errorMessage: 'Вопрос не может быть пустым'\n        }, {required: true}),\n        option1: createOptionControl(1),\n        option2: createOptionControl(2),\n        option3: createOptionControl(3),\n        option4: createOptionControl(4),\n    }\n}\n\nexport default class QuizCreator extends Component {\n    state = {\n        quiz: [],\n        rightAnswerID: 1,\n        formControls: createFormControls()\n    }\n\n    submitHandler = event => {\n        event.preventDefault()\n    }\n\n    addQuestionHandler = () => {\n\n    }\n\n    createQuizHandler = () => {\n\n    }\n\n    changeHandler = (value, controlName) => {\n        const formControls = { ...this.state.formControls }\n        const control = { ...formControls[controlName] }\n\n        \n    }\n\n    renderControls() {\n        return Object.keys(this.state.formControls)\n          .map((controlName, index) => {\n            const control = this.state.formControls[controlName]\n\n              return (\n                <>\n                    <Input\n                      key={index}\n                      label={control.label}\n                      value={control.value}\n                      valid={control.valid}\n                      shouldValidate={!!control.validation}\n                      touched={control.touched}\n                      errorMessage={control.errorMessage}\n                      onChange={event => this.changeHandler(event.target.value, controlName)}\n                    />\n                    {index === 0 ? <hr/> : null}\n                </>\n              )\n          })\n    }\n\n    selectChangeHandler = event => {\n        this.setState({\n            rightAnswerId: +event.target.value\n        })\n    }\n\n    render() {\n        const select = <Select\n            label=\"Выберите правильный ответ\"\n            value={this.state.rightAnswerId}\n            onChange={this.selectChangeHandler}\n            options={[\n                {text: 1, value: 1},\n                {text: 2, value: 2},\n                {text: 3, value: 3},\n                {text: 4, value: 4},\n            ]}\n        />\n\n        return (\n          <div className={styles.QuizCreator}>\n              <div>\n                  <h1>Создание теста</h1>\n\n                  <form onSubmit={this.submitHandler}>\n\n                      { this.renderControls() }\n\n                      { select }\n\n                      <Button\n                        type=\"primary\"\n                        onClick={this.addQuestionHandler}\n                      >\n                          Добавить вопрос\n                      </Button>\n                      <Button\n                        type=\"success\"\n                        onClick={this.createQuizHandler}\n                      >\n                          Создать тест\n                      </Button>\n                  </form>\n              </div>\n          </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}