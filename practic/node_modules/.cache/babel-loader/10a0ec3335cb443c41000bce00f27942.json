{"ast":null,"code":"var _jsxFileName = \"/Users/kirillkoroteev/dev/minin_course/minin_course_components/src/containers/Quiz/Quiz.js\";\nimport { Component } from \"react\";\nimport styles from \"./Quiz.module.css\";\nimport ActiveQuiz from \"../../components/ActiveQuiz/ActiveQuiz\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Quiz extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      activeQuestion: 0,\n      quiz: [{\n        id: 1,\n        question: 'Какого цвета небо?',\n        rightAnswerId: 2,\n        answers: [{\n          text: 'Черный',\n          id: 1\n        }, {\n          text: 'Синий',\n          id: 2\n        }, {\n          text: 'Красный',\n          id: 3\n        }, {\n          text: 'Зеленый',\n          id: 4\n        }]\n      }, {\n        id: 2,\n        question: 'В каком году основали Санкт-Петербург',\n        rightAnswerId: 3,\n        answers: [{\n          text: '1700',\n          id: 1\n        }, {\n          text: '1705',\n          id: 2\n        }, {\n          text: '1703',\n          id: 3\n        }, {\n          text: '1803',\n          id: 4\n        }]\n      }]\n    };\n\n    this.onAnswerClickHandler = answerId => {\n      console.log('AnswerId ', answerId);\n      const question = this.state.quiz[this.state.activeQuestion];\n\n      if (question.rightAnswerId === answerId) {\n        const timeout = window.setTimeout(() => {\n          if (this.isQuizFinished()) {\n            console.log('finished');\n          } else {\n            this.setState({\n              activeQuestion: this.state.activeQuestion + 1\n            });\n          }\n\n          window.clearTimeout(timeout);\n        }, 1000);\n      } else {}\n    };\n  }\n\n  isQuizFinished() {\n    return this.state.activeQuestion + 1 === this.state.quiz.length;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.Quiz,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.QuizWrapper,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"\\u041E\\u0442\\u0432\\u0435\\u0442\\u044C\\u0442\\u0435 \\u043D\\u0430 \\u0432\\u0441\\u0435 \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\\u044B!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ActiveQuiz, {\n          answers: this.state.quiz[this.state.activeQuestion].answers,\n          question: this.state.quiz[0].question,\n          onAnswerClick: this.onAnswerClickHandler,\n          quizLength: this.state.quiz.length,\n          answerNumber: this.state.activeQuestion + 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Quiz;","map":{"version":3,"sources":["/Users/kirillkoroteev/dev/minin_course/minin_course_components/src/containers/Quiz/Quiz.js"],"names":["Component","styles","ActiveQuiz","Quiz","state","activeQuestion","quiz","id","question","rightAnswerId","answers","text","onAnswerClickHandler","answerId","console","log","timeout","window","setTimeout","isQuizFinished","setState","clearTimeout","length","render","QuizWrapper"],"mappings":"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","sourcesContent":["import { Component } from \"react\";\nimport styles from \"./Quiz.module.css\"\nimport ActiveQuiz from \"../../components/ActiveQuiz/ActiveQuiz\";\n\nclass Quiz extends Component {\n  state = {\n    activeQuestion: 0,\n    quiz: [\n      { \n        id: 1,\n        question: 'Какого цвета небо?',\n        rightAnswerId: 2,\n        answers: [\n          {text: 'Черный', id: 1},\n          {text: 'Синий', id: 2},\n          {text: 'Красный', id: 3},\n          {text: 'Зеленый', id: 4},\n        ]\n      },\n      { \n        id: 2,\n        question: 'В каком году основали Санкт-Петербург',\n        rightAnswerId: 3,\n        answers: [\n          {text: '1700', id: 1},\n          {text: '1705', id: 2},\n          {text: '1703', id: 3},\n          {text: '1803', id: 4},\n        ]\n      },\n    ],\n  }\n\n  onAnswerClickHandler = (answerId) => {\n    console.log('AnswerId ', answerId)\n\n    const question = this.state.quiz[this.state.activeQuestion]\n\n    if (question.rightAnswerId === answerId) {\n      const timeout = window.setTimeout(() => {\n        if (this.isQuizFinished()) {\n          console.log('finished')\n        } else {\n          \n          this.setState({\n            activeQuestion: this.state.activeQuestion + 1\n          })\n        }\n\n        window.clearTimeout(timeout)\n      }, 1000)\n\n    } else {\n\n    }\n\n    \n  }\n\n  isQuizFinished() {\n    return this.state.activeQuestion + 1 === this.state.quiz.length\n  }\n\n  render() {\n    return (\n      <div className={styles.Quiz}>\n        \n        <div className={styles.QuizWrapper}>\n          <h1>Ответьте на все вопросы!</h1>\n          <ActiveQuiz \n            answers={this.state.quiz[this.state.activeQuestion].answers}\n            question={this.state.quiz[0].question}\n            onAnswerClick={this.onAnswerClickHandler}\n            quizLength={this.state.quiz.length}\n            answerNumber={this.state.activeQuestion + 1}\n          />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Quiz"]},"metadata":{},"sourceType":"module"}