{"ast":null,"code":"var _jsxFileName = \"/Users/kirillkoroteev/dev/minin_course/minin_course_components/src/containers/Quiz/Quiz.js\";\nimport { Component } from \"react\";\nimport styles from \"./Quiz.module.css\";\nimport ActiveQuiz from \"../../components/ActiveQuiz/ActiveQuiz\";\nimport FinishedQuiz from \"../../components/FinishedQuiz/FinishedQuiz\";\nimport axios from '../../axios/axios-quiz';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Quiz extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      results: {},\n      // {[id: success || error]}\n      isFinished: false,\n      activeQuestion: 0,\n      answerState: null,\n      // { [id]: 'success' || 'error' }\n      quiz: [{\n        id: 1,\n        question: 'Какого цвета небо?',\n        rightAnswerId: 2,\n        answers: [{\n          text: 'Черный',\n          id: 1\n        }, {\n          text: 'Синий',\n          id: 2\n        }, {\n          text: 'Красный',\n          id: 3\n        }, {\n          text: 'Зеленый',\n          id: 4\n        }]\n      }, {\n        id: 2,\n        question: 'В каком году основали Санкт-Петербург',\n        rightAnswerId: 3,\n        answers: [{\n          text: '1700',\n          id: 1\n        }, {\n          text: '1705',\n          id: 2\n        }, {\n          text: '1703',\n          id: 3\n        }, {\n          text: '1803',\n          id: 4\n        }]\n      }]\n    };\n\n    this.onAnswerClickHandler = answerId => {\n      if (this.state.answerState) {\n        const key = Object.keys(this.state.answerState)[0];\n\n        if (this.state.answerState[key] === 'success') {\n          return;\n        }\n      }\n\n      const question = this.state.quiz[this.state.activeQuestion];\n      const results = this.state.results;\n\n      if (question.rightAnswerId === answerId) {\n        if (!results[question.id]) {\n          results[question.id] = 'success';\n        }\n\n        this.setState({\n          answerState: {\n            [answerId]: 'success'\n          },\n          results\n        });\n        const timeout = window.setTimeout(() => {\n          if (this.isQuizFinished()) {\n            this.setState({\n              isFinished: true\n            });\n          } else {\n            this.setState({\n              activeQuestion: this.state.activeQuestion + 1,\n              answerState: null\n            });\n          }\n\n          window.clearTimeout(timeout);\n        }, 1000);\n      } else {\n        results[question.id] = 'error';\n        this.setState({\n          answerState: {\n            [answerId]: 'error'\n          },\n          results\n        });\n      }\n\n      console.log('answerState ', this.state.answerState);\n    };\n\n    this.retryHandler = () => {\n      this.setState({\n        activeQuestion: 0,\n        answerState: null,\n        isFinished: false,\n        results: {}\n      });\n    };\n  }\n\n  isQuizFinished() {\n    return this.state.activeQuestion + 1 === this.state.quiz.length;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.Quiz,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.QuizWrapper,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"\\u041E\\u0442\\u0432\\u0435\\u0442\\u044C\\u0442\\u0435 \\u043D\\u0430 \\u0432\\u0441\\u0435 \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\\u044B!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), this.state.isFinished ? /*#__PURE__*/_jsxDEV(FinishedQuiz, {\n          results: this.state.results,\n          quiz: this.state.quiz,\n          onRetry: this.retryHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(ActiveQuiz, {\n          answers: this.state.quiz[this.state.activeQuestion].answers,\n          question: this.state.quiz[0].question,\n          onAnswerClick: this.onAnswerClickHandler,\n          quizLength: this.state.quiz.length,\n          answerNumber: this.state.activeQuestion + 1,\n          state: this.state.answerState\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Quiz;","map":{"version":3,"sources":["/Users/kirillkoroteev/dev/minin_course/minin_course_components/src/containers/Quiz/Quiz.js"],"names":["Component","styles","ActiveQuiz","FinishedQuiz","axios","Quiz","state","results","isFinished","activeQuestion","answerState","quiz","id","question","rightAnswerId","answers","text","onAnswerClickHandler","answerId","key","Object","keys","setState","timeout","window","setTimeout","isQuizFinished","clearTimeout","console","log","retryHandler","length","render","QuizWrapper"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,UAAP,MAAuB,wCAAvB;AACA,OAAOC,YAAP,MAAyB,4CAAzB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;;;AAEA,MAAMC,IAAN,SAAmBL,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAC3BM,KAD2B,GACnB;AACNC,MAAAA,OAAO,EAAE,EADH;AACO;AACbC,MAAAA,UAAU,EAAE,KAFN;AAGNC,MAAAA,cAAc,EAAE,CAHV;AAINC,MAAAA,WAAW,EAAE,IAJP;AAIa;AACnBC,MAAAA,IAAI,EAAE,CACJ;AACEC,QAAAA,EAAE,EAAE,CADN;AAEEC,QAAAA,QAAQ,EAAE,oBAFZ;AAGEC,QAAAA,aAAa,EAAE,CAHjB;AAIEC,QAAAA,OAAO,EAAE,CACP;AAACC,UAAAA,IAAI,EAAE,QAAP;AAAiBJ,UAAAA,EAAE,EAAE;AAArB,SADO,EAEP;AAACI,UAAAA,IAAI,EAAE,OAAP;AAAgBJ,UAAAA,EAAE,EAAE;AAApB,SAFO,EAGP;AAACI,UAAAA,IAAI,EAAE,SAAP;AAAkBJ,UAAAA,EAAE,EAAE;AAAtB,SAHO,EAIP;AAACI,UAAAA,IAAI,EAAE,SAAP;AAAkBJ,UAAAA,EAAE,EAAE;AAAtB,SAJO;AAJX,OADI,EAYJ;AACEA,QAAAA,EAAE,EAAE,CADN;AAEEC,QAAAA,QAAQ,EAAE,uCAFZ;AAGEC,QAAAA,aAAa,EAAE,CAHjB;AAIEC,QAAAA,OAAO,EAAE,CACP;AAACC,UAAAA,IAAI,EAAE,MAAP;AAAeJ,UAAAA,EAAE,EAAE;AAAnB,SADO,EAEP;AAACI,UAAAA,IAAI,EAAE,MAAP;AAAeJ,UAAAA,EAAE,EAAE;AAAnB,SAFO,EAGP;AAACI,UAAAA,IAAI,EAAE,MAAP;AAAeJ,UAAAA,EAAE,EAAE;AAAnB,SAHO,EAIP;AAACI,UAAAA,IAAI,EAAE,MAAP;AAAeJ,UAAAA,EAAE,EAAE;AAAnB,SAJO;AAJX,OAZI;AALA,KADmB;;AAAA,SAgC3BK,oBAhC2B,GAgCHC,QAAD,IAAc;AACnC,UAAI,KAAKZ,KAAL,CAAWI,WAAf,EAA4B;AAC1B,cAAMS,GAAG,GAAGC,MAAM,CAACC,IAAP,CAAY,KAAKf,KAAL,CAAWI,WAAvB,EAAoC,CAApC,CAAZ;;AACA,YAAI,KAAKJ,KAAL,CAAWI,WAAX,CAAuBS,GAAvB,MAAgC,SAApC,EAA+C;AAC7C;AACD;AACF;;AAED,YAAMN,QAAQ,GAAG,KAAKP,KAAL,CAAWK,IAAX,CAAgB,KAAKL,KAAL,CAAWG,cAA3B,CAAjB;AACA,YAAMF,OAAO,GAAG,KAAKD,KAAL,CAAWC,OAA3B;;AAEA,UAAIM,QAAQ,CAACC,aAAT,KAA2BI,QAA/B,EAAyC;AACvC,YAAI,CAACX,OAAO,CAACM,QAAQ,CAACD,EAAV,CAAZ,EAA2B;AACzBL,UAAAA,OAAO,CAACM,QAAQ,CAACD,EAAV,CAAP,GAAuB,SAAvB;AACD;;AAED,aAAKU,QAAL,CAAe;AACbZ,UAAAA,WAAW,EAAE;AAAC,aAACQ,QAAD,GAAY;AAAb,WADA;AAEbX,UAAAA;AAFa,SAAf;AAKA,cAAMgB,OAAO,GAAGC,MAAM,CAACC,UAAP,CAAkB,MAAM;AACtC,cAAI,KAAKC,cAAL,EAAJ,EAA2B;AACzB,iBAAKJ,QAAL,CAAc;AACZd,cAAAA,UAAU,EAAE;AADA,aAAd;AAGD,WAJD,MAIO;AACL,iBAAKc,QAAL,CAAc;AACZb,cAAAA,cAAc,EAAE,KAAKH,KAAL,CAAWG,cAAX,GAA4B,CADhC;AAEZC,cAAAA,WAAW,EAAE;AAFD,aAAd;AAID;;AAEDc,UAAAA,MAAM,CAACG,YAAP,CAAoBJ,OAApB;AACD,SAbe,EAab,IAba,CAAhB;AAeD,OAzBD,MAyBO;AACLhB,QAAAA,OAAO,CAACM,QAAQ,CAACD,EAAV,CAAP,GAAuB,OAAvB;AACA,aAAKU,QAAL,CAAe;AACbZ,UAAAA,WAAW,EAAE;AAAC,aAACQ,QAAD,GAAY;AAAb,WADA;AAEbX,UAAAA;AAFa,SAAf;AAID;;AAEDqB,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4B,KAAKvB,KAAL,CAAWI,WAAvC;AAED,KA9E0B;;AAAA,SAoF3BoB,YApF2B,GAoFZ,MAAM;AACnB,WAAKR,QAAL,CAAc;AACZb,QAAAA,cAAc,EAAE,CADJ;AAEZC,QAAAA,WAAW,EAAE,IAFD;AAGZF,QAAAA,UAAU,EAAE,KAHA;AAIZD,QAAAA,OAAO,EAAE;AAJG,OAAd;AAMD,KA3F0B;AAAA;;AAgF3BmB,EAAAA,cAAc,GAAG;AACf,WAAO,KAAKpB,KAAL,CAAWG,cAAX,GAA4B,CAA5B,KAAkC,KAAKH,KAAL,CAAWK,IAAX,CAAgBoB,MAAzD;AACD;;AAWDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAE/B,MAAM,CAACI,IAAvB;AAAA,6BAEE;AAAK,QAAA,SAAS,EAAEJ,MAAM,CAACgC,WAAvB;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAII,KAAK3B,KAAL,CAAWE,UAAX,gBACI,QAAC,YAAD;AACE,UAAA,OAAO,EAAE,KAAKF,KAAL,CAAWC,OADtB;AAEE,UAAA,IAAI,EAAE,KAAKD,KAAL,CAAWK,IAFnB;AAGE,UAAA,OAAO,EAAE,KAAKmB;AAHhB;AAAA;AAAA;AAAA;AAAA,gBADJ,gBAMI,QAAC,UAAD;AACE,UAAA,OAAO,EAAE,KAAKxB,KAAL,CAAWK,IAAX,CAAgB,KAAKL,KAAL,CAAWG,cAA3B,EAA2CM,OADtD;AAEE,UAAA,QAAQ,EAAE,KAAKT,KAAL,CAAWK,IAAX,CAAgB,CAAhB,EAAmBE,QAF/B;AAGE,UAAA,aAAa,EAAE,KAAKI,oBAHtB;AAIE,UAAA,UAAU,EAAE,KAAKX,KAAL,CAAWK,IAAX,CAAgBoB,MAJ9B;AAKE,UAAA,YAAY,EAAE,KAAKzB,KAAL,CAAWG,cAAX,GAA4B,CAL5C;AAME,UAAA,KAAK,EAAE,KAAKH,KAAL,CAAWI;AANpB;AAAA;AAAA;AAAA;AAAA,gBAVR;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,YADF;AAyBD;;AAvH0B;;AA0H7B,eAAeL,IAAf","sourcesContent":["import { Component } from \"react\";\nimport styles from \"./Quiz.module.css\"\nimport ActiveQuiz from \"../../components/ActiveQuiz/ActiveQuiz\";\nimport FinishedQuiz from \"../../components/FinishedQuiz/FinishedQuiz\";\nimport axios from '../../axios/axios-quiz'\n\nclass Quiz extends Component {\n  state = {\n    results: {}, // {[id: success || error]}\n    isFinished: false,\n    activeQuestion: 0,\n    answerState: null, // { [id]: 'success' || 'error' }\n    quiz: [\n      {\n        id: 1,\n        question: 'Какого цвета небо?',\n        rightAnswerId: 2,\n        answers: [\n          {text: 'Черный', id: 1},\n          {text: 'Синий', id: 2},\n          {text: 'Красный', id: 3},\n          {text: 'Зеленый', id: 4},\n        ]\n      },\n      {\n        id: 2,\n        question: 'В каком году основали Санкт-Петербург',\n        rightAnswerId: 3,\n        answers: [\n          {text: '1700', id: 1},\n          {text: '1705', id: 2},\n          {text: '1703', id: 3},\n          {text: '1803', id: 4},\n        ]\n      },\n    ],\n  }\n\n  onAnswerClickHandler = (answerId) => {\n    if (this.state.answerState) {\n      const key = Object.keys(this.state.answerState)[0]\n      if (this.state.answerState[key] === 'success') {\n        return\n      }\n    }\n\n    const question = this.state.quiz[this.state.activeQuestion]\n    const results = this.state.results\n\n    if (question.rightAnswerId === answerId) {\n      if (!results[question.id]) {\n        results[question.id] = 'success'\n      }\n\n      this.setState( {\n        answerState: {[answerId]: 'success'},\n        results\n      } )\n\n      const timeout = window.setTimeout(() => {\n        if (this.isQuizFinished()) {\n          this.setState({\n            isFinished: true,\n          })\n        } else {\n          this.setState({\n            activeQuestion: this.state.activeQuestion + 1,\n            answerState: null\n          })\n        }\n\n        window.clearTimeout(timeout)\n      }, 1000)\n\n    } else {\n      results[question.id] = 'error'\n      this.setState( {\n        answerState: {[answerId]: 'error'},\n        results\n      } )\n    }\n\n    console.log('answerState ', this.state.answerState)\n\n  }\n\n  isQuizFinished() {\n    return this.state.activeQuestion + 1 === this.state.quiz.length\n  }\n\n  retryHandler = () => {\n    this.setState({\n      activeQuestion: 0,\n      answerState: null,\n      isFinished: false,\n      results: {}\n    })\n  }\n\n  render() {\n    return (\n      <div className={styles.Quiz}>\n\n        <div className={styles.QuizWrapper}>\n          <h1>Ответьте на все вопросы!</h1>\n\n          {\n            this.state.isFinished\n              ? <FinishedQuiz\n                  results={this.state.results}\n                  quiz={this.state.quiz}\n                  onRetry={this.retryHandler}\n                />\n              : <ActiveQuiz\n                  answers={this.state.quiz[this.state.activeQuestion].answers}\n                  question={this.state.quiz[0].question}\n                  onAnswerClick={this.onAnswerClickHandler}\n                  quizLength={this.state.quiz.length}\n                  answerNumber={this.state.activeQuestion + 1}\n                  state={this.state.answerState}\n                />\n          }\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Quiz\n"]},"metadata":{},"sourceType":"module"}