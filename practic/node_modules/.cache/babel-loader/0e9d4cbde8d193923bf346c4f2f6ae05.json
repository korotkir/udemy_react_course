{"ast":null,"code":"var _jsxFileName = \"/Users/kirillkoroteev/dev/minin_course/minin_course_components/practic/src/containers/Quiz/Quiz.js\";\nimport { Component } from \"react\";\nimport styles from \"./Quiz.module.css\";\nimport ActiveQuiz from \"../../components/ActiveQuiz/ActiveQuiz\";\nimport FinishedQuiz from \"../../components/FinishedQuiz/FinishedQuiz\";\nimport axios from '../../axios/axios-quiz';\nimport Loader from '../../components/UI/Loader/Loaders';\nimport { useParams } from 'react-router-dom'; // TODO: Для работоспособности приложения необходимо удалить импорт,\n//  функцию withParams, удалить переменную { id } и поменять строку\n//  отправки на сервер. Не забудь убрать hoc функцию в экспорте!\n//  Также удали react-router!\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction withParams(Component) {\n  var _s = $RefreshSig$();\n\n  return _s(props => {\n    _s();\n\n    return /*#__PURE__*/_jsxDEV(Component, { ...props,\n      params: useParams()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 19\n    }, this);\n  }, \"zmUErVVHtqqM6DIDQ9M8H17P2nM=\", false, function () {\n    return [useParams];\n  });\n}\n\nclass Quiz extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      results: {},\n      // {[id: success || error]}\n      isFinished: false,\n      activeQuestion: 0,\n      answerState: null,\n      // { [id]: 'success' || 'error' }\n      quiz: [],\n      loading: true\n    };\n\n    this.onAnswerClickHandler = answerId => {\n      if (this.state.answerState) {\n        const key = Object.keys(this.state.answerState)[0];\n\n        if (this.state.answerState[key] === 'success') {\n          return;\n        }\n      }\n\n      const question = this.state.quiz[this.state.activeQuestion];\n      const results = this.state.results;\n\n      if (question.rightAnswerId === answerId) {\n        if (!results[question.id]) {\n          results[question.id] = 'success';\n        }\n\n        this.setState({\n          answerState: {\n            [answerId]: 'success'\n          },\n          results\n        });\n        const timeout = window.setTimeout(() => {\n          if (this.isQuizFinished()) {\n            this.setState({\n              isFinished: true\n            });\n          } else {\n            this.setState({\n              activeQuestion: this.state.activeQuestion + 1,\n              answerState: null\n            });\n          }\n\n          window.clearTimeout(timeout);\n        }, 1000);\n      } else {\n        results[question.id] = 'error';\n        this.setState({\n          answerState: {\n            [answerId]: 'error'\n          },\n          results\n        });\n      }\n\n      console.log('answerState ', this.state.answerState);\n    };\n\n    this.retryHandler = () => {\n      this.setState({\n        activeQuestion: 0,\n        answerState: null,\n        isFinished: false,\n        results: {}\n      });\n    };\n  }\n\n  isQuizFinished() {\n    return this.state.activeQuestion + 1 === this.state.quiz.length;\n  }\n\n  async componentDidMount() {\n    console.log(this.props.match);\n\n    try {\n      let {\n        id\n      } = this.props.params; // const response = await axios.get(`/quizes/${this.props.match.params.id}.json`)\n\n      const response = await axios.get(`/quizes/${id}.json`);\n      const quiz = response.data;\n      console.log(id);\n      this.setState({\n        quiz,\n        loading: false\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.Quiz,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.QuizWrapper,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"\\u041E\\u0442\\u0432\\u0435\\u0442\\u044C\\u0442\\u0435 \\u043D\\u0430 \\u0432\\u0441\\u0435 \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\\u044B!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), this.state.loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 17\n        }, this) : this.state.isFinished ? /*#__PURE__*/_jsxDEV(FinishedQuiz, {\n          results: this.state.results,\n          quiz: this.state.quiz,\n          onRetry: this.retryHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 19\n        }, this) : /*#__PURE__*/_jsxDEV(ActiveQuiz, {\n          answers: this.state.quiz[this.state.activeQuestion].answers,\n          question: this.state.quiz[this.state.activeQuestion].question,\n          onAnswerClick: this.onAnswerClickHandler,\n          quizLength: this.state.quiz.length,\n          answerNumber: this.state.activeQuestion + 1,\n          state: this.state.answerState\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default _c = withParams(Quiz);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/Users/kirillkoroteev/dev/minin_course/minin_course_components/practic/src/containers/Quiz/Quiz.js"],"names":["Component","styles","ActiveQuiz","FinishedQuiz","axios","Loader","useParams","withParams","props","Quiz","state","results","isFinished","activeQuestion","answerState","quiz","loading","onAnswerClickHandler","answerId","key","Object","keys","question","rightAnswerId","id","setState","timeout","window","setTimeout","isQuizFinished","clearTimeout","console","log","retryHandler","length","componentDidMount","match","params","response","get","data","e","render","QuizWrapper","answers"],"mappings":"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","sourcesContent":["import { Component } from \"react\";\nimport styles from \"./Quiz.module.css\"\nimport ActiveQuiz from \"../../components/ActiveQuiz/ActiveQuiz\";\nimport FinishedQuiz from \"../../components/FinishedQuiz/FinishedQuiz\";\nimport axios from '../../axios/axios-quiz'\nimport Loader from '../../components/UI/Loader/Loaders'\nimport {useParams} from 'react-router-dom'\n\n// TODO: Для работоспособности приложения необходимо удалить импорт,\n//  функцию withParams, удалить переменную { id } и поменять строку\n//  отправки на сервер. Не забудь убрать hoc функцию в экспорте!\n//  Также удали react-router!\n\n\n\n\nfunction withParams(Component) {\n  return props => <Component {...props} params={useParams()}/>\n}\n\n\nclass Quiz extends Component {\n  state = {\n    results: {}, // {[id: success || error]}\n    isFinished: false,\n    activeQuestion: 0,\n    answerState: null, // { [id]: 'success' || 'error' }\n    quiz: [],\n    loading: true,\n  }\n\n  onAnswerClickHandler = (answerId) => {\n    if (this.state.answerState) {\n      const key = Object.keys(this.state.answerState)[0]\n      if (this.state.answerState[key] === 'success') {\n        return\n      }\n    }\n\n    const question = this.state.quiz[this.state.activeQuestion]\n    const results = this.state.results\n\n    if (question.rightAnswerId === answerId) {\n      if (!results[question.id]) {\n        results[question.id] = 'success'\n      }\n\n      this.setState( {\n        answerState: {[answerId]: 'success'},\n        results\n      } )\n\n      const timeout = window.setTimeout(() => {\n        if (this.isQuizFinished()) {\n          this.setState({\n            isFinished: true,\n          })\n        } else {\n          this.setState({\n            activeQuestion: this.state.activeQuestion + 1,\n            answerState: null\n          })\n        }\n\n        window.clearTimeout(timeout)\n      }, 1000)\n\n    } else {\n      results[question.id] = 'error'\n      this.setState( {\n        answerState: {[answerId]: 'error'},\n        results\n      } )\n    }\n\n    console.log('answerState ', this.state.answerState)\n\n  }\n\n  isQuizFinished() {\n    return this.state.activeQuestion + 1 === this.state.quiz.length\n  }\n\n  retryHandler = () => {\n    this.setState({\n      activeQuestion: 0,\n      answerState: null,\n      isFinished: false,\n      results: {}\n    })\n  }\n\n  async componentDidMount() {\n    console.log(this.props.match)\n    try {\n      let { id } = this.props.params\n      // const response = await axios.get(`/quizes/${this.props.match.params.id}.json`)\n      const response = await axios.get(`/quizes/${id}.json`)\n      const quiz = response.data\n      console.log(id)\n\n      this.setState({\n        quiz,\n        loading: false\n      })\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  render() {\n    return (\n      <div className={styles.Quiz}>\n\n        <div className={styles.QuizWrapper}>\n          <h1>Ответьте на все вопросы!</h1>\n\n          {\n            this.state.loading\n              ? <Loader />\n              : this.state.isFinished\n                ? <FinishedQuiz\n                  results={this.state.results}\n                  quiz={this.state.quiz}\n                  onRetry={this.retryHandler}\n                />\n                : <ActiveQuiz\n                  answers={this.state.quiz[this.state.activeQuestion].answers}\n                  question={this.state.quiz[this.state.activeQuestion].question}\n                  onAnswerClick={this.onAnswerClickHandler}\n                  quizLength={this.state.quiz.length}\n                  answerNumber={this.state.activeQuestion + 1}\n                  state={this.state.answerState}\n                />\n          }\n\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default withParams(Quiz)\n"]},"metadata":{},"sourceType":"module"}