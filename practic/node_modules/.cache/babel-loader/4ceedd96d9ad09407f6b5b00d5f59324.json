{"ast":null,"code":"var _jsxFileName = \"/Users/kirillkoroteev/dev/minin_course/minin_course_components/src/containers/QuizCreator/QuizCreator.js\";\nimport React, { Component } from 'react';\nimport styles from './QuizCreator.module.css';\nimport Button from '../../components/UI/Button/Button';\nimport Input from '../../components/UI/Input/Input';\nimport Select from '../../components/UI/Select/Select';\nimport { createControl, validate, validateForm } from '../../form/formFramework';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction createOptionControl(number) {\n  return createControl({\n    label: `Вариант ${number}`,\n    errorMessage: 'Значение не может быть пустым',\n    id: number\n  }, {\n    required: true\n  });\n}\n\nfunction createFormControls() {\n  return {\n    question: createControl({\n      label: 'Введите вопрос',\n      errorMessage: 'Вопрос не может быть пустым'\n    }, {\n      required: true\n    }),\n    option1: createOptionControl(1),\n    option2: createOptionControl(2),\n    option3: createOptionControl(3),\n    option4: createOptionControl(4)\n  };\n}\n\nexport default class QuizCreator extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      quiz: [],\n      quizTitle: '',\n      isFormValid: false,\n      rightAnswerId: 1,\n      formControls: createFormControls()\n    };\n\n    this.submitHandler = event => {\n      event.preventDefault();\n    };\n\n    this.addQuestionHandler = event => {\n      // TODO: Разобрать данную функцию!!!\n      event.preventDefault();\n      const quiz = this.state.quiz.concat();\n      const index = quiz.length + 1;\n      const {\n        question,\n        option1,\n        option2,\n        option3,\n        option4\n      } = this.state.formControls; // console.log(quiz[0] ? Object.values(quiz[0])[0] : 'Пока не определено')\n\n      const questionItem = {\n        question: this.state.formControls.question.value,\n        id: index,\n        rightAnswerId: this.state.rightAnswerId,\n        answers: [{\n          text: option1.value,\n          id: option1.id\n        }, {\n          text: option2.value,\n          id: option2.id\n        }, {\n          text: option3.value,\n          id: option3.id\n        }, {\n          text: option4.value,\n          id: option4.id\n        }]\n      };\n\n      if (questionItem.indexOf(this.state.quizTitle === -1)) {\n        quiz.push(this.state.quizTitle);\n      }\n\n      quiz.push(questionItem);\n      this.setState({\n        quiz,\n        isFormValid: false,\n        rightAnswerId: 1,\n        formControls: createFormControls()\n      });\n    };\n\n    this.createQuizHandler = async event => {\n      try {\n        await axios.post('https://react-quiz-f412a-default-rtdb.firebaseio.com/quizes.json', this.state.quiz);\n        this.setState({\n          quiz: [],\n          isFormValid: false,\n          rightAnswerId: 1,\n          formControls: createFormControls()\n        });\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    this.changeHandler = (value, controlName) => {\n      const formControls = { ...this.state.formControls\n      };\n      const control = { ...formControls[controlName]\n      };\n      control.touched = true;\n      control.value = value;\n      control.valid = validate(control.value, control.validation);\n      formControls[controlName] = control;\n      this.setState({\n        formControls,\n        isFormValid: validateForm(formControls)\n      });\n    };\n\n    this.selectChangeHandler = event => {\n      this.setState({\n        rightAnswerId: +event.target.value\n      });\n    };\n\n    this.quizTitleHandler = event => {\n      const quizTitle = event;\n      this.setState({\n        quizTitle\n      });\n    };\n  }\n\n  renderControls() {\n    return Object.keys(this.state.formControls).map((controlName, index) => {\n      const control = this.state.formControls[controlName];\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          label: control.label,\n          value: control.value,\n          valid: control.valid,\n          shouldValidate: !!control.validation,\n          touched: control.touched,\n          errorMessage: control.errorMessage,\n          onChange: event => this.changeHandler(event.target.value, controlName)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 25\n        }, this), index === 0 ? /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 36\n        }, this) : null]\n      }, void 0, true);\n    });\n  }\n\n  render() {\n    const select = /*#__PURE__*/_jsxDEV(Select, {\n      label: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u043F\\u0440\\u0430\\u0432\\u0438\\u043B\\u044C\\u043D\\u044B\\u0439 \\u043E\\u0442\\u0432\\u0435\\u0442\",\n      value: this.state.rightAnswerId,\n      onChange: this.selectChangeHandler,\n      options: [{\n        text: 1,\n        value: 1\n      }, {\n        text: 2,\n        value: 2\n      }, {\n        text: 3,\n        value: 3\n      }, {\n        text: 4,\n        value: 4\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 24\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.QuizCreator,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u043D\\u0438\\u0435 \\u0442\\u0435\\u0441\\u0442\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.submitHandler,\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            label: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0438\\u043C\\u044F \\u0442\\u0435\\u0441\\u0442\\u0430\",\n            value: this.state.quizTitle,\n            onChange: event => this.quizTitleHandler(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 23\n          }, this), this.renderControls(), select, /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            onClick: this.addQuestionHandler,\n            disabled: !this.state.isFormValid,\n            children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"success\",\n            onClick: this.createQuizHandler,\n            disabled: this.state.quiz.length === 0,\n            children: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u0442\\u0435\\u0441\\u0442\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 11\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/kirillkoroteev/dev/minin_course/minin_course_components/src/containers/QuizCreator/QuizCreator.js"],"names":["React","Component","styles","Button","Input","Select","createControl","validate","validateForm","axios","createOptionControl","number","label","errorMessage","id","required","createFormControls","question","option1","option2","option3","option4","QuizCreator","state","quiz","quizTitle","isFormValid","rightAnswerId","formControls","submitHandler","event","preventDefault","addQuestionHandler","concat","index","length","questionItem","value","answers","text","indexOf","push","setState","createQuizHandler","post","e","console","log","changeHandler","controlName","control","touched","valid","validation","selectChangeHandler","target","quizTitleHandler","renderControls","Object","keys","map","render","select"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport styles from './QuizCreator.module.css'\nimport Button from '../../components/UI/Button/Button'\nimport Input from '../../components/UI/Input/Input'\nimport Select from '../../components/UI/Select/Select'\nimport {createControl, validate, validateForm} from '../../form/formFramework'\nimport axios from 'axios'\n\nfunction createOptionControl(number) {\n    return createControl({\n        label: `Вариант ${number}`,\n        errorMessage: 'Значение не может быть пустым',\n        id: number,\n    }, {required: true})\n}\n\nfunction createFormControls() {\n    return {\n        question: createControl({\n            label: 'Введите вопрос',\n            errorMessage: 'Вопрос не может быть пустым'\n        }, {required: true}),\n        option1: createOptionControl(1),\n        option2: createOptionControl(2),\n        option3: createOptionControl(3),\n        option4: createOptionControl(4),\n    }\n}\n\nexport default class QuizCreator extends Component {\n    state = {\n        quiz: [],\n        quizTitle: '',\n        isFormValid: false,\n        rightAnswerId: 1,\n        formControls: createFormControls()\n    }\n\n    submitHandler = event => {\n        event.preventDefault()\n    }\n\n    addQuestionHandler = event => {\n        // TODO: Разобрать данную функцию!!!\n        event.preventDefault()\n\n        const quiz = this.state.quiz.concat()\n        const index = quiz.length + 1\n\n        const {question, option1, option2, option3, option4} = this.state.formControls\n\n        // console.log(quiz[0] ? Object.values(quiz[0])[0] : 'Пока не определено')\n\n        const questionItem = {\n            question: this.state.formControls.question.value,\n            id: index,\n            rightAnswerId: this.state.rightAnswerId,\n            answers: [\n                { text: option1.value, id: option1.id },\n                { text: option2.value, id: option2.id },\n                { text: option3.value, id: option3.id },\n                { text: option4.value, id: option4.id },\n            ]\n        }\n\n        if (questionItem.indexOf(this.state.quizTitle === -1)) {\n            quiz.push(this.state.quizTitle)\n        }\n\n        quiz.push(questionItem)\n\n        this.setState({\n            quiz,\n            isFormValid: false,\n            rightAnswerId: 1,\n            formControls: createFormControls()\n        })\n    }\n\n    createQuizHandler = async event => {\n        try {\n            await axios.post('https://react-quiz-f412a-default-rtdb.firebaseio.com/quizes.json', this.state.quiz)\n\n            this.setState({\n                quiz: [],\n                isFormValid: false,\n                rightAnswerId: 1,\n                formControls: createFormControls()\n              })\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    // createQuizHandler = event => {\n    //     event.preventDefault()\n    //\n    //     axios.post('https://react-quiz-f412a-default-rtdb.firebaseio.com/quizes.json', this.state.quiz)\n    //       .then(response => {\n    //           console.log(response)\n    //       }, error => console.log(error))\n    // }\n\n    changeHandler = (value, controlName) => {\n        const formControls = { ...this.state.formControls }\n        const control = { ...formControls[controlName] }\n\n        control.touched = true\n        control.value = value\n        control.valid = validate(control.value, control.validation)\n\n        formControls[controlName] = control\n\n        this.setState({\n            formControls,\n            isFormValid: validateForm(formControls)\n        })\n\n\n    }\n\n    renderControls() {\n        return Object.keys(this.state.formControls)\n          .map((controlName, index) => {\n            const control = this.state.formControls[controlName]\n              return (\n                <>\n                        <Input\n                          key={index}\n                          label={control.label}\n                          value={control.value}\n                          valid={control.valid}\n                          shouldValidate={!!control.validation}\n                          touched={control.touched}\n                          errorMessage={control.errorMessage}\n                          onChange={event => this.changeHandler(event.target.value, controlName)}\n                        />\n                    {index === 0 ? <hr/> : null}\n                </>\n              )\n          })\n    }\n\n    selectChangeHandler = event => {\n        this.setState({\n            rightAnswerId: +event.target.value\n        })\n    }\n\n    quizTitleHandler = event => {\n        const quizTitle = event\n        this.setState({\n            quizTitle\n        })\n    }\n\n\n    render() {\n        const select = <Select\n            label=\"Выберите правильный ответ\"\n            value={this.state.rightAnswerId}\n            onChange={this.selectChangeHandler}\n            options={[\n                {text: 1, value: 1},\n                {text: 2, value: 2},\n                {text: 3, value: 3},\n                {text: 4, value: 4},\n            ]}\n        />\n\n        return (\n          <div className={styles.QuizCreator}>\n              <div>\n                  <h1>Создание теста</h1>\n\n                  <form onSubmit={this.submitHandler}>\n\n                      <Input\n                        label=\"Введите имя теста\"\n                        value={this.state.quizTitle}\n                        onChange={event => this.quizTitleHandler(event.target.value)}\n                      />\n\n\n                      { this.renderControls() }\n\n                      { select }\n\n                      <Button\n                        type=\"primary\"\n                        onClick={this.addQuestionHandler}\n                        disabled={!this.state.isFormValid}\n                      >\n                          Добавить вопрос\n                      </Button>\n                      <Button\n                        type=\"success\"\n                        onClick={this.createQuizHandler}\n                        disabled={this.state.quiz.length === 0}\n                      >\n                          Создать тест\n                      </Button>\n                  </form>\n              </div>\n          </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}